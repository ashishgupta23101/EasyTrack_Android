{"version":3,"sources":["webpack:///./src/app/pages/barcode-scanner/barcode-scanner.module.ts","webpack:///./src/app/pages/barcode-scanner/barcode-scanner.page.html","webpack:///./src/app/pages/barcode-scanner/barcode-scanner.page.scss","webpack:///./src/app/pages/barcode-scanner/barcode-scanner.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACvD,0DAA0D;AACb;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAYF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAVpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,qBAAqB;gBACrB,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BrC,u/BAAu/B,gBAAgB,88BAA88B,UAAU,2lC;;;;;;;;;;;ACA/9D,+BAA+B,4BAA4B,EAAE,mBAAmB,4BAA4B,EAAE,+CAA+C,2kB;;;;;;;;;;;;;;;;;;;;;;ACAvF;AACrB;AACF;AAC/C,0CAA0C;AAC1C,iDAAiD;AACV;AAC0B;AACD;AAMhE;IAEE,4BAAoB,KAAqB,EAAU,YAA6B,EAAS,OAAsB,EAAU,OAAsB;QAA3H,UAAK,GAAL,KAAK,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAiB;QAAS,YAAO,GAAP,OAAO,CAAe;QAAU,YAAO,GAAP,OAAO,CAAe;QAU/I,kBAAa,GAAoB,IAAI,CAAC;QACxC,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAW,EAAE,CAAC;QAapB,iBAAY,GAAG,KAAK,CAAC;QACrB,oBAAe,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QACtD,cAAS,GAAG,KAAK,CAAC;QA1BhB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC/C,CAAC;IACF,qCAAQ,GAAR;QACC,uBAAuB;IACxB,CAAC;IACA,mCAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAoBD,wCAAW,GAAX;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,sCAAS,GAAT,UAAU,YAAiB;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAC,iBAAiB,CAAC,CAAC;IAC7E,CAAC;IACD,2CAAc,GAAd,UAAe,OAA0B;QACvC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;IAEvD,CAAC;IAED,yCAAY,GAAZ,UAAa,YAAiB;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,WAAS,YAAc,CAAC,CAAC;IAC1D,CAAC;IAED,iDAAoB,GAApB,UAAqB,QAAgB;QACnC,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,QAAQ,EAAvB,CAAuB,CAAC,CAAC;QACxE,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,IAAI,CAAC;IACtC,CAAC;IAGD,4CAAe,GAAf,UAAgB,GAAY;QAC1B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC3B,CAAC;IAGD,8CAAiB,GAAjB,UAAkB,YAAqB;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,4CAAe,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAzEU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,6HAA0C;;SAE3C,CAAC;+EAG2B,8DAAc,EAAwB,6EAAe,EAAkB,4DAAa,EAAmB,8EAAa;OAFpI,kBAAkB,CA0E9B;IAAD,yBAAC;CAAA;AA1E8B","file":"pages-barcode-scanner-barcode-scanner-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n//import { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { IonicModule } from '@ionic/angular';\n\nimport { BarcodeScannerPage } from './barcode-scanner.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BarcodeScannerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    //ZXingScannerModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BarcodeScannerPage]\n})\nexport class BarcodeScannerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-button (click)=\\\"goBack()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" ios=\\\"ios-arrow-back\\\" md=\\\"md-arrow-back\\\"></ion-icon>\\n          </ion-button>\\n\\n      </ion-buttons>\\n      <ion-title>Scanner</ion-title>\\n      <ion-buttons slot=\\\"end\\\">\\n\\n           <ion-button title=\\\"clear Map\\\" (click)=\\\"toggleTorch()\\\" *ngIf=\\\"torchAvailable$ | async\\\">\\n            <ion-icon slot=\\\"icon-only\\\"  ios=\\\"ios-flash\\\" md=\\\"md-flash\\\"></ion-icon>\\n          </ion-button>\\n\\n      </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ng-container *ngIf=\\\"availableDevices\\\">\\n    <select (change)=\\\"onDeviceSelectChange($event.target.value)\\\">\\n      <option value=\\\"\\\" [selected]=\\\"!currentDevice\\\">No Device</option>\\n      <option *ngFor=\\\"let device of availableDevices\\\" [value]=\\\"device.deviceId\\\" [selected]=\\\"currentDevice && device.deviceId === currentDevice.deviceId\\\">{{ device.label }}</option>\\n    </select>\\n  </ng-container>\\n      <zxing-scanner [torch]=\\\"torchEnabled\\\" [(device)]=\\\"currentDevice\\\"\\n      (scanSuccess)=\\\"onCodeResult($event)\\\"\\n      (scanError)=\\\"scanError($event)\\\"\\n      [formats]=\\\"formatsEnabled\\\" [tryHarder]=\\\"tryHarder\\\" (permissionResponse)=\\\"onHasPermission($event)\\\"\\n      (camerasFound)=\\\"onCamerasFound($event)\\\" (torchCompatible)=\\\"onTorchCompatible($event)\\\"></zxing-scanner>\\n      \\n      <ng-container *ngIf=\\\"hasPermission === undefined\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <h2>Waiting for permissions.</h2>\\n        </ion-card-header>\\n        <ion-card-content>\\n          If your device does not has cameras, no permissions will be asked.\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"isFailed\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <h2>Failed!</h2>\\n        </ion-card-header>\\n        <ion-card-content>\\n          {{errorMsg}}. ðŸ˜ª\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"hasPermission === false\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <h2>Access Denied to Camera</h2>\\n        </ion-card-header>\\n        <ion-card-content>\\n          You denied the camera permission, we can't scan anything without it. ðŸ˜ª\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n    \\n    <ng-container *ngIf=\\\"hasDevices === undefined\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <h2>Couldn't check for devices.</h2>\\n        </ion-card-header>\\n        <ion-card-content>\\n          This may be caused by some security error.\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n    \\n    <ng-container *ngIf=\\\"hasDevices === false\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <h2>No devices were found.</h2>\\n        </ion-card-header>\\n        <ion-card-content>\\n          I believe your device has no media devices attached to.\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n  </ion-content>\\n\"","module.exports = \"ion-content {\\n  background-color: black; }\\n\\nzxing-scanner {\\n  background-color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYmFyY29kZS1zY2FubmVyL0Q6XFxDb2RlXFxFYXN5VHJhY2tBbmRyb2lkXFxJb25pY1xcQ29kZVxcRWFzeVRyYWNrX0FuZHJvaWQvc3JjXFxhcHBcXHBhZ2VzXFxiYXJjb2RlLXNjYW5uZXJcXGJhcmNvZGUtc2Nhbm5lci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQSx1QkFBdUIsRUFBQTs7QUFHdkI7RUFDSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JhcmNvZGUtc2Nhbm5lci9iYXJjb2RlLXNjYW5uZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG5cbnp4aW5nLXNjYW5uZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgXG59Il19 */\"","import { Component, OnInit, ViewChild, VERSION } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\n//import { Result } from '@zxing/library';\n//import { BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoaderService } from 'src/app/providers/loader.service';\nimport { TrackingService } from 'src/services/tracking.service';\n@Component({\n  selector: 'app-barcode-scanner',\n  templateUrl: './barcode-scanner.page.html',\n  styleUrls: ['./barcode-scanner.page.scss'],\n})\nexport class BarcodeScannerPage implements OnInit {\n\n  constructor(private route: ActivatedRoute, private trackService: TrackingService,private navCtrl: NavController, private loading: LoaderService) {\n    this.loading.present('Waiting for Camera..');\n  }\n ngOnInit()    {\n  // this.getLocations();\n }\n  goBack() {\n    this.navCtrl.pop();\n  }\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\nisFailed: boolean = false;\nerrorMsg: string = '';\n  // formatsEnabled: BarcodeFormat[] = [\n  //   BarcodeFormat.CODE_128,\n  //   BarcodeFormat.DATA_MATRIX,\n  //   BarcodeFormat.EAN_13,\n  //   BarcodeFormat.QR_CODE,\n  // ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  scanError(resultString: any){\n    this.isFailed = true;\n    this.errorMsg = resultString;\n    this.trackService.logError(JSON.stringify(resultString),'BarCode Scanner');\n  }\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.loading.dismiss();\n    this.availableDevices = devices; \n    this.hasDevices = Boolean(devices && devices.length);\n   \n  }\n\n  onCodeResult(resultString: any) {\n    this.isFailed = false;\n    this.qrResultString = resultString;\n      this.navCtrl.navigateForward(`/home/${resultString}`);\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  \n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  \n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n"],"sourceRoot":""}